# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json
import warnings

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.plug_property_data_type import (
        PlugPropertyDataType,
    )

    PlugPropertyDataTypeAdapter = TypeAdapter(PlugPropertyDataType)
    MODELS_AVAILABLE = True
except ImportError as exc:
    warnings.warn(f"Type adapter for PlugPropertyDataType not available: {exc}")
    MODELS_AVAILABLE = False

plug_property_data_type_model_schema = json.loads(r"""{
  "title" : "PlugPropertyDataType",
  "type" : "string",
  "description" : "Datatype supported in plug input or output properties.",
  "enum" : [ "string", "integer", "long", "float", "double", "boolean", "object" ]
}
""")
plug_property_data_type_model_schema.update({"definitions": MODEL_DEFINITIONS})

plug_property_data_type_faker = JSF(
    plug_property_data_type_model_schema, allow_none_optionals=1
)


class PlugPropertyDataTypeStub:
    """PlugPropertyDataType unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return plug_property_data_type_faker.generate()

    @classmethod
    def create_instance(cls) -> "PlugPropertyDataType":
        """Create PlugPropertyDataType stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return PlugPropertyDataTypeAdapter.validate_python(cls.create_json())
