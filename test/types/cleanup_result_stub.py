# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.cleanup_result import CleanupResult

    CleanupResultAdapter = TypeAdapter(CleanupResult)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

cleanup_result_model_schema = json.loads(
    r"""{
  "title" : "CleanupResult",
  "type" : "object",
  "properties" : {
    "scheduledJob" : {
      "$ref" : "#/components/schemas/JobReference"
    }
  },
  "description" : "The result data for a completed cleanup job."
}
""",
    object_hook=with_example_provider,
)
cleanup_result_model_schema.update({"definitions": MODEL_DEFINITIONS})

cleanup_result_faker = JSF(cleanup_result_model_schema, allow_none_optionals=1)


class CleanupResultStub:
    """CleanupResult unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return cleanup_result_faker.generate()

    @classmethod
    def create_instance(cls) -> "CleanupResult":
        """Create CleanupResult stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return CleanupResultAdapter.validate_python(cls.create_json())
