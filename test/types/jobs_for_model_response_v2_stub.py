# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.jobs_for_model_response_v2 import (
        JobsForModelResponseV2,
    )

    JobsForModelResponseV2Adapter = TypeAdapter(JobsForModelResponseV2)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

jobs_for_model_response_v2_model_schema = json.loads(
    r"""{
  "required" : [ "function", "jobs" ],
  "type" : "object",
  "properties" : {
    "jobs" : {
      "type" : "array",
      "description" : "Listing of jobs related to the function deployment. This includes active jobs, and the most recently failed job (per type) that was archived on the entity.",
      "items" : {
        "$ref" : "#/components/schemas/AnyJobForFunction"
      }
    },
    "function" : {
      "$ref" : "#/components/schemas/FunctionRef"
    },
    "_links" : {
      "$ref" : "#/components/schemas/JobsForModelResponseV2__links"
    }
  },
  "description" : "Model Jobs Found"
}
""",
    object_hook=with_example_provider,
)
jobs_for_model_response_v2_model_schema.update({"definitions": MODEL_DEFINITIONS})

jobs_for_model_response_v2_faker = JSF(
    jobs_for_model_response_v2_model_schema, allow_none_optionals=1
)


class JobsForModelResponseV2Stub:
    """JobsForModelResponseV2 unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return jobs_for_model_response_v2_faker.generate()

    @classmethod
    def create_instance(cls) -> "JobsForModelResponseV2":
        """Create JobsForModelResponseV2 stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return JobsForModelResponseV2Adapter.validate_python(cls.create_json())
