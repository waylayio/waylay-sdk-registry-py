# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json
import warnings

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.rebuild_query_params import RebuildQueryParams

    RebuildQueryParamsAdapter = TypeAdapter(RebuildQueryParams)
    MODELS_AVAILABLE = True
except ImportError as exc:
    warnings.warn(f"Type adapter for RebuildQueryParams not available: {exc}")
    MODELS_AVAILABLE = False

rebuild_query_params_model_schema = json.loads(r"""{
  "type" : "object",
  "properties" : {
    "upgrade" : {
      "$ref" : "#/components/schemas/RebuildPolicy"
    },
    "dryRun" : {
      "type" : "boolean",
      "description" : "If set to <code>true</code>, checks whether rebuild jobs are needed, but do not start any jobs."
    },
    "forceVersion" : {
      "$ref" : "#/components/schemas/SemanticVersion"
    },
    "ignoreChecks" : {
      "type" : "boolean",
      "description" : "If set to true, checks that normally prevent a rebuild are overriden. These checks include:\n* function state in `pending`, `running`, `failed` or `undeployed`\n* backoff period due to recent failures\n* usage of deprecated dependencies\n* running jobs on entity\n* the `dryRun` option"
    },
    "scaleToZero" : {
      "type" : "boolean",
      "description" : "Indicates whether the function needs to be scaled down after successful (re-)deployment. If not set, the function is scaled to zero only if it was not active before this command."
    },
    "skipRebuild" : {
      "type" : "boolean",
      "description" : "If set, the function will not be rebuild. Always uses the current runtime version when re-deploying/re-verifying the function."
    }
  },
  "additionalProperties" : false
}
""")
rebuild_query_params_model_schema.update({"definitions": MODEL_DEFINITIONS})

rebuild_query_params_faker = JSF(
    rebuild_query_params_model_schema, allow_none_optionals=1
)


class RebuildQueryParamsStub:
    """RebuildQueryParams unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return rebuild_query_params_faker.generate()

    @classmethod
    def create_instance(cls) -> "RebuildQueryParams":
        """Create RebuildQueryParams stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return RebuildQueryParamsAdapter.validate_python(cls.create_json())
