# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
from typing import Union, Literal, List, Dict

from waylay.services.registry.models.legacy_plug_response import LegacyPlugResponse


from .legacy_configuration_response_object_stub import LegacyConfigurationResponseObjectStub


from .failure_reason_stub import FailureReasonStub

from .legacy_plug_response_metadata_stub import LegacyPlugResponseMetadataStub

from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictBool, StrictStr, field_validator
from pydantic import Field
from typing_extensions import Annotated
from waylay.services.registry.models.failure_reason import FailureReason
from waylay.services.registry.models.legacy_configuration_response_object import LegacyConfigurationResponseObject
from waylay.services.registry.models.legacy_plug_response_metadata import LegacyPlugResponseMetadata
from waylay.services.registry.models.media_type import MediaType
from waylay.services.registry.models.status import Status


# some mappings that are needed for some <example> interpolations
null, true, false = None, True, False


class LegacyPlugResponseStub:
    """LegacyPlugResponse unit test stubs."""

    @staticmethod
    def create_instance(
        include_optional: bool = False,
    ) -> LegacyPlugResponse:
        """Create LegacyPlugResponse stub instance.
            include_optional -- if `True`, optional properties are included.
        """

        if include_optional:
            return LegacyPlugResponse(
                name='',
                version='9072888001528021798096225500850762068629339333975650685139102691291.0.0',
                author='',
                category='',
                icon_url='',
                documentation_url='',
                is_deprecated=True,
                description='',
                states=[''],
                raw_data=[{'key': 'value'}],
                media_type='application/javascript',
                configuration=[LegacyConfigurationResponseObjectStub.create_instance()],
                commands=[''],
                status='registered',
                failure_reason=FailureReasonStub.create_instance(),
                metadata=LegacyPlugResponseMetadataStub.create_instance()
            )
        else:
            return LegacyPlugResponse(
                name='',
                version='9072888001528021798096225500850762068629339333975650685139102691291.0.0',
                is_deprecated=True,
                media_type='application/javascript',
                commands=[''],
                status='registered',
                metadata=LegacyPlugResponseMetadataStub.create_instance()
            )
