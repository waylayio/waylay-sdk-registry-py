# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json
import warnings

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.openfaas_function_ref import (
        OpenfaasFunctionRef,
    )

    OpenfaasFunctionRefAdapter = TypeAdapter(OpenfaasFunctionRef)
    MODELS_AVAILABLE = True
except ImportError as exc:
    warnings.warn(f"Type adapter for OpenfaasFunctionRef not available: {exc}")
    MODELS_AVAILABLE = False

openfaas_function_ref_model_schema = json.loads(r"""{
  "required" : [ "endpoint", "namespace" ],
  "type" : "object",
  "properties" : {
    "namespace" : {
      "type" : "string",
      "description" : "The (openfaas) namespace for the target function."
    },
    "endpoint" : {
      "type" : "string",
      "description" : "The (openfaas) endpoint service name"
    }
  }
}
""")
openfaas_function_ref_model_schema.update({"definitions": MODEL_DEFINITIONS})

openfaas_function_ref_faker = JSF(
    openfaas_function_ref_model_schema, allow_none_optionals=1
)


class OpenfaasFunctionRefStub:
    """OpenfaasFunctionRef unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return openfaas_function_ref_faker.generate()

    @classmethod
    def create_instance(cls) -> "OpenfaasFunctionRef":
        """Create OpenfaasFunctionRef stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return OpenfaasFunctionRefAdapter.validate_python(cls.create_json())
