# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.asset_condition_pattern import (
        AssetConditionPattern,
    )

    AssetConditionPatternAdapter = TypeAdapter(AssetConditionPattern)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

asset_condition_pattern_model_schema = json.loads(
    r"""{
  "title" : "AssetCondition_pattern",
  "description" : "Pattern that selects a file in a function archive",
  "anyOf" : [ {
    "type" : "string"
  }, {
    "type" : "array",
    "items" : {
      "type" : "string"
    }
  } ]
}
""",
    object_hook=with_example_provider,
)
asset_condition_pattern_model_schema.update({"definitions": MODEL_DEFINITIONS})

asset_condition_pattern_faker = JSF(
    asset_condition_pattern_model_schema, allow_none_optionals=1
)


class AssetConditionPatternStub:
    """AssetConditionPattern unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return asset_condition_pattern_faker.generate()

    @classmethod
    def create_instance(cls) -> "AssetConditionPattern":
        """Create AssetConditionPattern stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return AssetConditionPatternAdapter.validate_python(cls.create_json())
