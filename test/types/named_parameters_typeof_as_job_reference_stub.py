# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.named_parameters_typeof_as_job_reference import (
        NamedParametersTypeofAsJobReference,
    )

    NamedParametersTypeofAsJobReferenceAdapter = TypeAdapter(
        NamedParametersTypeofAsJobReference
    )
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

named_parameters_typeof_as_job_reference__model_schema = json.loads(
    r"""{
  "required" : [ "jobStatus" ],
  "type" : "object",
  "properties" : {
    "jobStatus" : {
      "$ref" : "#/components/schemas/NamedParameters_typeof_asJobReference__jobStatus"
    }
  },
  "additionalProperties" : false
}
""",
    object_hook=with_example_provider,
)
named_parameters_typeof_as_job_reference__model_schema.update({
    "definitions": MODEL_DEFINITIONS
})

named_parameters_typeof_as_job_reference__faker = JSF(
    named_parameters_typeof_as_job_reference__model_schema, allow_none_optionals=1
)


class NamedParametersTypeofAsJobReferenceStub:
    """NamedParametersTypeofAsJobReference unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return named_parameters_typeof_as_job_reference__faker.generate()

    @classmethod
    def create_instance(cls) -> "NamedParametersTypeofAsJobReference":
        """Create NamedParametersTypeofAsJobReference stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return NamedParametersTypeofAsJobReferenceAdapter.validate_python(
            cls.create_json()
        )
