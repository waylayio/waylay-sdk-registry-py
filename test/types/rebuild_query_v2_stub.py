# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.rebuild_query_v2 import RebuildQueryV2

    RebuildQueryV2Adapter = TypeAdapter(RebuildQueryV2)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

rebuild_query_v2_model_schema = json.loads(
    r"""{
  "type" : "object",
  "properties" : {
    "scaleToZero" : {
      "type" : "boolean",
      "description" : "Indicates whether the function needs to be scaled down after successful verification. If not set, the function is scaled to zero only if it was not active before this command."
    },
    "comment" : {
      "type" : "string",
      "description" : "An optional user-specified comment corresponding to the operation."
    },
    "dryRun" : {
      "type" : "boolean",
      "description" : "If set to <code>true</code>, checks whether rebuild jobs are needed, but do not start any jobs."
    },
    "async" : {
      "type" : "boolean",
      "description" : "Unless this is set to <code>false</code>, the server will start the required job actions asynchronously and return a <code>202</code> <em>Accepted</em> response. If <code>false</code> the request will block until the job actions are completed, or a timeout occurs.",
      "default" : true
    },
    "upgrade" : {
      "$ref" : "#/components/schemas/RebuildPolicy"
    },
    "forceVersion" : {
      "$ref" : "#/components/schemas/SemanticVersion"
    },
    "ignoreChecks" : {
      "type" : "boolean",
      "description" : "If set to true, checks that normally prevent a rebuild are overriden. These checks include:\n* function state in `pending`, `running`, `failed` or `undeployed`\n* backoff period due to recent failures\n* usage of deprecated dependencies\n* running jobs on entity\n* the `dryRun` option"
    },
    "skipRebuild" : {
      "type" : "boolean",
      "description" : "If set, the function will not be rebuild. Always uses the current runtime version when re-deploying/re-verifying the function."
    }
  },
  "additionalProperties" : false
}
""",
    object_hook=with_example_provider,
)
rebuild_query_v2_model_schema.update({"definitions": MODEL_DEFINITIONS})

rebuild_query_v2_faker = JSF(rebuild_query_v2_model_schema, allow_none_optionals=1)


class RebuildQueryV2Stub:
    """RebuildQueryV2 unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return rebuild_query_v2_faker.generate()

    @classmethod
    def create_instance(cls) -> "RebuildQueryV2":
        """Create RebuildQueryV2 stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return RebuildQueryV2Adapter.validate_python(cls.create_json())
