# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.request_deploy_query import RequestDeployQuery

    RequestDeployQueryAdapter = TypeAdapter(RequestDeployQuery)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

request_deploy_query_model_schema = json.loads(
    r"""{
  "type" : "object",
  "properties" : {
    "deploy" : {
      "type" : "boolean",
      "description" : "Indicates that a function should be _deployed_ when its assets are valid.\n\n* If `true` (default), jobs to build and deploy the function will be initiated after it is checked that the assets are valid. Invalid assets lead to a validation error, and the function and its assets are not created or updated.\n* If `false`, the uploaded assets are stored and the function is created/updated in `registered` state. Asset validation errors are only returned as warning, and stored as `failureReason` on the function entity. Use an _asset update_ or _rebuild_ to initiate a build and deploy at a later stage.",
      "default" : true
    }
  },
  "additionalProperties" : false
}
""",
    object_hook=with_example_provider,
)
request_deploy_query_model_schema.update({"definitions": MODEL_DEFINITIONS})

request_deploy_query_faker = JSF(
    request_deploy_query_model_schema, allow_none_optionals=1
)


class RequestDeployQueryStub:
    """RequestDeployQuery unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return request_deploy_query_faker.generate()

    @classmethod
    def create_instance(cls) -> "RequestDeployQuery":
        """Create RequestDeployQuery stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return RequestDeployQueryAdapter.validate_python(cls.create_json())
