# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.async_verify_query import AsyncVerifyQuery

    AsyncVerifyQueryAdapter = TypeAdapter(AsyncVerifyQuery)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

async_verify_query_model_schema = json.loads(
    r"""{
  "type" : "object",
  "properties" : {
    "async" : {
      "type" : "boolean",
      "description" : "Unless this is set to <code>false</code>, the server will start the required job actions asynchronously and return a <code>202</code> <em>Accepted</em> response. If <code>false</code> the request will block until the job actions are completed, or a timeout occurs.",
      "default" : true
    },
    "scaleToZero" : {
      "type" : "boolean",
      "description" : "Indicates whether the function needs to be scaled down after successful verification. If not set, the function is scaled to zero only if it was not active before this command."
    }
  },
  "additionalProperties" : false
}
""",
    object_hook=with_example_provider,
)
async_verify_query_model_schema.update({"definitions": MODEL_DEFINITIONS})

async_verify_query_faker = JSF(async_verify_query_model_schema, allow_none_optionals=1)


class AsyncVerifyQueryStub:
    """AsyncVerifyQuery unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return async_verify_query_faker.generate()

    @classmethod
    def create_instance(cls) -> "AsyncVerifyQuery":
        """Create AsyncVerifyQuery stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return AsyncVerifyQueryAdapter.validate_python(cls.create_json())
