# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.batch_args import BatchArgs

    BatchArgsAdapter = TypeAdapter(BatchArgs)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

batch_args_model_schema = json.loads(
    r"""{
  "title" : "BatchArgs",
  "required" : [ "functionType", "plugName" ],
  "type" : "object",
  "properties" : {
    "plugName" : {
      "title" : "plugName",
      "type" : "string"
    },
    "functionType" : {
      "$ref" : "#/components/schemas/FunctionType"
    },
    "childType" : {
      "title" : "childType",
      "type" : "string"
    }
  }
}
""",
    object_hook=with_example_provider,
)
batch_args_model_schema.update({"definitions": MODEL_DEFINITIONS})

batch_args_faker = JSF(batch_args_model_schema, allow_none_optionals=1)


class BatchArgsStub:
    """BatchArgs unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return batch_args_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "BatchArgs":
        """Create BatchArgs stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if json is None:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(BatchArgsAdapter.json_schema(), allow_none_optionals=1)
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return BatchArgsAdapter.validate_python(json, context={"skip_validation": True})
