# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.compiled_runtime_version import (
        CompiledRuntimeVersion,
    )

    CompiledRuntimeVersionAdapter = TypeAdapter(CompiledRuntimeVersion)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

compiled_runtime_version_model_schema = json.loads(
    r"""{
  "title" : "CompiledRuntimeVersion",
  "required" : [ "archiveFormat", "deprecated", "functionType", "name", "title", "upgradable", "version" ],
  "type" : "object",
  "properties" : {
    "deprecated" : {
      "title" : "deprecated",
      "type" : "boolean",
      "description" : "If true, this runtime should no longer be used for new functions."
    },
    "upgradable" : {
      "title" : "upgradable",
      "type" : "boolean",
      "description" : "If true, a newer runtime for this function is available using the `rebuild` API."
    },
    "name" : {
      "title" : "name",
      "type" : "string"
    },
    "functionType" : {
      "$ref" : "#/components/schemas/FunctionType"
    },
    "archiveFormat" : {
      "$ref" : "#/components/schemas/ArchiveFormat"
    },
    "build" : {
      "$ref" : "#/components/schemas/BuildSpec"
    },
    "deploy" : {
      "$ref" : "#/components/schemas/DeploySpec"
    },
    "language" : {
      "$ref" : "#/components/schemas/LanguageRelease"
    },
    "providedDependencies" : {
      "title" : "providedDependencies",
      "type" : "array",
      "description" : "Description of dependencies provided by this runtime version.",
      "items" : {
        "$ref" : "#/components/schemas/ProvidedDependency"
      }
    },
    "assets" : {
      "$ref" : "#/components/schemas/AssetsConditions"
    },
    "title" : {
      "title" : "title",
      "type" : "string"
    },
    "description" : {
      "title" : "description",
      "type" : "string"
    },
    "version" : {
      "$ref" : "#/components/schemas/SemanticVersion"
    }
  },
  "description" : "Compiled build and deployment information for a runtime version. Contains all defaults applied on the _global_, _functionType_, _archiveFormat_, _runtime_ and _runtime version_ level."
}
""",
    object_hook=with_example_provider,
)
compiled_runtime_version_model_schema.update({"definitions": MODEL_DEFINITIONS})

compiled_runtime_version_faker = JSF(
    compiled_runtime_version_model_schema, allow_none_optionals=1
)


class CompiledRuntimeVersionStub:
    """CompiledRuntimeVersion unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return compiled_runtime_version_faker.generate()

    @classmethod
    def create_instance(cls) -> "CompiledRuntimeVersion":
        """Create CompiledRuntimeVersion stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return CompiledRuntimeVersionAdapter.validate_python(cls.create_json())
