# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json
import warnings

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.multipart_file_upload import (
        MultipartFileUpload,
    )

    MultipartFileUploadAdapter = TypeAdapter(MultipartFileUpload)
    MODELS_AVAILABLE = True
except ImportError as exc:
    warnings.warn(f"Type adapter for MultipartFileUpload not available: {exc}")
    MODELS_AVAILABLE = False

multipart_file_upload__model_schema = json.loads(r"""{
  "title" : "Multipart file upload.",
  "type" : "object",
  "properties" : {
    "filename" : {
      "type" : "array",
      "items" : {
        "type" : "string",
        "format" : "binary"
      }
    }
  },
  "description" : "A multi-part upload containing one or more file assets.",
  "nullable" : true
}
""")
multipart_file_upload__model_schema.update({"definitions": MODEL_DEFINITIONS})

multipart_file_upload__faker = JSF(
    multipart_file_upload__model_schema, allow_none_optionals=1
)


class MultipartFileUploadStub:
    """MultipartFileUpload unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return multipart_file_upload__faker.generate()

    @classmethod
    def create_instance(cls) -> "MultipartFileUpload":
        """Create MultipartFileUpload stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return MultipartFileUploadAdapter.validate_python(cls.create_json())
