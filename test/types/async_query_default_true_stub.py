# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json
import warnings

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.async_query_default_true import (
        AsyncQueryDefaultTrue,
    )

    AsyncQueryDefaultTrueAdapter = TypeAdapter(AsyncQueryDefaultTrue)
    MODELS_AVAILABLE = True
except ImportError as exc:
    warnings.warn(f"Type adapter for AsyncQueryDefaultTrue not available: {exc}")
    MODELS_AVAILABLE = False

async_query_default_true_model_schema = json.loads(r"""{
  "type" : "object",
  "properties" : {
    "async" : {
      "type" : "boolean",
      "description" : "Unless this is set to <code>false</code>, the server will start the required job actions asynchronously and return a <code>202</code> <em>Accepted</em> response. If <code>false</code> the request will block until the job actions are completed, or a timeout occurs.",
      "default" : true
    }
  },
  "additionalProperties" : false
}
""")
async_query_default_true_model_schema.update({"definitions": MODEL_DEFINITIONS})

async_query_default_true_faker = JSF(
    async_query_default_true_model_schema, allow_none_optionals=1
)


class AsyncQueryDefaultTrueStub:
    """AsyncQueryDefaultTrue unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return async_query_default_true_faker.generate()

    @classmethod
    def create_instance(cls) -> "AsyncQueryDefaultTrue":
        """Create AsyncQueryDefaultTrue stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return AsyncQueryDefaultTrueAdapter.validate_python(cls.create_json())
