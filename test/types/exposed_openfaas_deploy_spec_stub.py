# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json
import warnings

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.exposed_openfaas_deploy_spec import (
        ExposedOpenfaasDeploySpec,
    )

    ExposedOpenfaasDeploySpecAdapter = TypeAdapter(ExposedOpenfaasDeploySpec)
    MODELS_AVAILABLE = True
except ImportError as exc:
    warnings.warn(f"Type adapter for ExposedOpenfaasDeploySpec not available: {exc}")
    MODELS_AVAILABLE = False

exposed_openfaas_deploy_spec_model_schema = json.loads(r"""{
  "title" : "ExposedOpenfaasDeploySpec",
  "required" : [ "image", "namespace", "service" ],
  "type" : "object",
  "properties" : {
    "service" : {
      "title" : "service",
      "type" : "string"
    },
    "image" : {
      "title" : "image",
      "type" : "string"
    },
    "namespace" : {
      "title" : "namespace",
      "type" : "string"
    },
    "labels" : {
      "title" : "labels",
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "annotations" : {
      "title" : "annotations",
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "limits" : {
      "$ref" : "#/components/schemas/ResourceLimits"
    },
    "requests" : {
      "$ref" : "#/components/schemas/ResourceLimits"
    }
  }
}
""")
exposed_openfaas_deploy_spec_model_schema.update({"definitions": MODEL_DEFINITIONS})

exposed_openfaas_deploy_spec_faker = JSF(
    exposed_openfaas_deploy_spec_model_schema, allow_none_optionals=1
)


class ExposedOpenfaasDeploySpecStub:
    """ExposedOpenfaasDeploySpec unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return exposed_openfaas_deploy_spec_faker.generate()

    @classmethod
    def create_instance(cls) -> "ExposedOpenfaasDeploySpec":
        """Create ExposedOpenfaasDeploySpec stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return ExposedOpenfaasDeploySpecAdapter.validate_python(cls.create_json())
