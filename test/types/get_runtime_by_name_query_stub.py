# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json
import warnings

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.get_runtime_by_name_query import (
        GetRuntimeByNameQuery,
    )

    GetRuntimeByNameQueryAdapter = TypeAdapter(GetRuntimeByNameQuery)
    MODELS_AVAILABLE = True
except ImportError as exc:
    warnings.warn(f"Type adapter for GetRuntimeByNameQuery not available: {exc}")
    MODELS_AVAILABLE = False

get_runtime_by_name_query_model_schema = json.loads(r"""{
  "type" : "object",
  "properties" : {
    "version" : {
      "$ref" : "#/components/schemas/SemanticVersionRange"
    },
    "includeDeprecated" : {
      "type" : "boolean",
      "description" : "If set to `true`, deprecated runtimes will be included in the query.",
      "default" : false
    },
    "functionType" : {
      "type" : "array",
      "description" : "If set, filters on the <code>functionType</code> of a runtime. Uses an exact match.",
      "example" : "plugs",
      "items" : {
        "$ref" : "#/components/schemas/FunctionType"
      }
    },
    "archiveFormat" : {
      "type" : "array",
      "description" : "If set, filters on the <code>archiveFormat</code> of a runtime. Uses an exact match.",
      "example" : "node",
      "items" : {
        "$ref" : "#/components/schemas/ArchiveFormat"
      }
    }
  },
  "additionalProperties" : false
}
""")
get_runtime_by_name_query_model_schema.update({"definitions": MODEL_DEFINITIONS})

get_runtime_by_name_query_faker = JSF(
    get_runtime_by_name_query_model_schema, allow_none_optionals=1
)


class GetRuntimeByNameQueryStub:
    """GetRuntimeByNameQuery unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return get_runtime_by_name_query_faker.generate()

    @classmethod
    def create_instance(cls) -> "GetRuntimeByNameQuery":
        """Create GetRuntimeByNameQuery stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return GetRuntimeByNameQueryAdapter.validate_python(cls.create_json())
