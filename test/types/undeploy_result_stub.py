# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.undeploy_result import UndeployResult

    UndeployResultAdapter = TypeAdapter(UndeployResult)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

undeploy_result_model_schema = json.loads(
    r"""{
  "title" : "UndeployResult",
  "required" : [ "assets", "deployment", "registration" ],
  "type" : "object",
  "properties" : {
    "deployment" : {
      "title" : "deployment",
      "type" : "boolean"
    },
    "assets" : {
      "title" : "assets",
      "type" : "boolean"
    },
    "registration" : {
      "title" : "registration",
      "type" : "boolean"
    }
  },
  "description" : "The result data for a completed undeployment job."
}
""",
    object_hook=with_example_provider,
)
undeploy_result_model_schema.update({"definitions": MODEL_DEFINITIONS})

undeploy_result_faker = JSF(undeploy_result_model_schema, allow_none_optionals=1)


class UndeployResultStub:
    """UndeployResult unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return undeploy_result_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "UndeployResult":
        """Create UndeployResult stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if json is None:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                UndeployResultAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return UndeployResultAdapter.validate_python(
            json, context={"skip_validation": True}
        )
