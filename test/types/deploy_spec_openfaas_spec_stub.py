# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.deploy_spec_openfaas_spec import (
        DeploySpecOpenfaasSpec,
    )

    DeploySpecOpenfaasSpecAdapter = TypeAdapter(DeploySpecOpenfaasSpec)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

deploy_spec_openfaas_spec_model_schema = json.loads(
    r"""{
  "title" : "DeploySpec_openfaasSpec",
  "type" : "object",
  "properties" : {
    "service" : {
      "title" : "service",
      "type" : "string"
    },
    "image" : {
      "title" : "image",
      "type" : "string"
    },
    "namespace" : {
      "title" : "namespace",
      "type" : "string"
    },
    "network" : {
      "title" : "network",
      "type" : "string"
    },
    "envVars" : {
      "title" : "envVars",
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "constraints" : {
      "title" : "constraints",
      "type" : "array",
      "items" : {
        "type" : "string"
      }
    },
    "labels" : {
      "title" : "labels",
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "annotations" : {
      "title" : "annotations",
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "secrets" : {
      "title" : "secrets",
      "type" : "array",
      "items" : {
        "type" : "string"
      }
    },
    "registryAuth" : {
      "title" : "registryAuth",
      "type" : "string"
    },
    "limits" : {
      "$ref" : "#/components/schemas/ResourceLimits"
    },
    "requests" : {
      "$ref" : "#/components/schemas/ResourceLimits"
    },
    "readOnlyRootFilesystem" : {
      "title" : "readOnlyRootFilesystem",
      "type" : "boolean"
    }
  },
  "description" : "If specified, it overrides the properties in `default`. Non-specified properties are taken from `default`"
}
""",
    object_hook=with_example_provider,
)
deploy_spec_openfaas_spec_model_schema.update({"definitions": MODEL_DEFINITIONS})

deploy_spec_openfaas_spec_faker = JSF(
    deploy_spec_openfaas_spec_model_schema, allow_none_optionals=1
)


class DeploySpecOpenfaasSpecStub:
    """DeploySpecOpenfaasSpec unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return deploy_spec_openfaas_spec_faker.generate(
            use_defaults=True, use_examples=True
        )

    @classmethod
    def create_instance(cls) -> "DeploySpecOpenfaasSpec":
        """Create DeploySpecOpenfaasSpec stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                DeploySpecOpenfaasSpecAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return DeploySpecOpenfaasSpecAdapter.validate_python(
            json, context={"skip_validation": True}
        )
