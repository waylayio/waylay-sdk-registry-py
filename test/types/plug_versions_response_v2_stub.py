# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.registry.models.plug_versions_response_v2 import (
        PlugVersionsResponseV2,
    )

    PlugVersionsResponseV2Adapter = TypeAdapter(PlugVersionsResponseV2)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

plug_versions_response_v2_model_schema = json.loads(
    r"""{
  "required" : [ "count", "entities" ],
  "type" : "object",
  "properties" : {
    "limit" : {
      "type" : "number",
      "description" : "The page size used for this query result."
    },
    "count" : {
      "type" : "number",
      "description" : "The total count of matching items, from which this result is one page."
    },
    "page" : {
      "type" : "number",
      "description" : "The page number of a paged query result."
    },
    "entities" : {
      "type" : "array",
      "description" : "The specification and deployment status of the queried functions",
      "items" : {
        "$ref" : "#/components/schemas/PlugResponseV2"
      }
    }
  },
  "description" : "Plugs Versions Found"
}
""",
    object_hook=with_example_provider,
)
plug_versions_response_v2_model_schema.update({"definitions": MODEL_DEFINITIONS})

plug_versions_response_v2_faker = JSF(
    plug_versions_response_v2_model_schema, allow_none_optionals=1
)


class PlugVersionsResponseV2Stub:
    """PlugVersionsResponseV2 unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return plug_versions_response_v2_faker.generate()

    @classmethod
    def create_instance(cls) -> "PlugVersionsResponseV2":
        """Create PlugVersionsResponseV2 stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return PlugVersionsResponseV2Adapter.validate_python(cls.create_json())
