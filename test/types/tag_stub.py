# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.tag import Tag

    TagAdapter = TypeAdapter(Tag)
    MODELS_AVAILABLE = True
except ImportError:
    MODELS_AVAILABLE = False

tag_model_schema = json.loads(r"""{
  "title" : "Tag",
  "required" : [ "color", "name" ],
  "type" : "object",
  "properties" : {
    "name" : {
      "title" : "name",
      "type" : "string",
      "description" : "Name of the tag"
    },
    "color" : {
      "title" : "color",
      "type" : "string",
      "description" : "Color associated with the tag in an UI."
    }
  },
  "description" : "One or more tags can be assigned to a function entity to facilitate grouping and searching."
}
""")
tag_model_schema.update({"definitions": MODEL_DEFINITIONS})

tag_faker = JSF(tag_model_schema, allow_none_optionals=1)


class TagStub:
    """Tag unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return tag_faker.generate()

    @classmethod
    def create_instance(cls) -> "Tag":
        """Create Tag stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return TagAdapter.validate_python(cls.create_json())
