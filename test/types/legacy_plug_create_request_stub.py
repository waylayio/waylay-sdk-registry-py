# coding: utf-8
"""Waylay Function Registry model tests.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS

try:
    from waylay.services.registry.models.legacy_plug_create_request import (
        LegacyPlugCreateRequest,
    )

    LegacyPlugCreateRequestAdapter = TypeAdapter(LegacyPlugCreateRequest)
    MODELS_AVAILABLE = True
except ImportError:
    MODELS_AVAILABLE = False

legacy_plug_create_request_model_schema = json.loads(r"""{
  "required" : [ "metadata", "name", "script", "version" ],
  "type" : "object",
  "properties" : {
    "name" : {
      "type" : "string"
    },
    "version" : {
      "$ref" : "#/components/schemas/SemanticVersion"
    },
    "script" : {
      "type" : "string"
    },
    "dependencies" : {
      "$ref" : "#/components/schemas/LegacyPlugDependencies"
    },
    "metadata" : {
      "$ref" : "#/components/schemas/LegacyPlugRequest_metadata"
    },
    "type" : {
      "$ref" : "#/components/schemas/PlugType"
    }
  },
  "additionalProperties" : false
}
""")
legacy_plug_create_request_model_schema.update({"definitions": MODEL_DEFINITIONS})

legacy_plug_create_request_faker = JSF(
    legacy_plug_create_request_model_schema, allow_none_optionals=1
)


class LegacyPlugCreateRequestStub:
    """LegacyPlugCreateRequest unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return legacy_plug_create_request_faker.generate()

    @classmethod
    def create_instance(cls) -> "LegacyPlugCreateRequest":
        """Create LegacyPlugCreateRequest stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return LegacyPlugCreateRequestAdapter.validate_python(cls.create_json())
