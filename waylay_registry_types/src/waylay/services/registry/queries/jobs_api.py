# coding: utf-8
"""Waylay Function Registry query parameters.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

from __future__ import annotations  # for Python 3.7â€“3.9

from pydantic import Field, StrictStr
from typing import (
    List,
    Optional,
    Union,
    Any,
)
from typing_extensions import (
    NotRequired,  # >=3.11
    TypedDict,  # >=3.12
)

from pydantic import Field
from typing_extensions import Annotated
from pydantic import StrictBool, StrictStr

from typing import Any, List, Optional, Union

from ..models.function_type import FunctionType
from ..models.job_state_result import JobStateResult
from ..models.job_type import JobType
from ..models.job_type_schema import JobTypeSchema


class EventsQuery(TypedDict):
    """events query parameters."""

    # TODO use type
    type: NotRequired[
        Annotated[Optional[JobType], Field(description="The type of the job.")]
    ]
    # TODO use id
    id: NotRequired[
        Annotated[Optional[StrictStr], Field(description="The id of the job.")]
    ]
    # TODO use children
    children: NotRequired[
        Annotated[
            Optional[StrictBool],
            Field(
                description="If set to <code>true</code>, the event stream will include events of the job's dependants. E.g., when subscribing to a verify job with `children=true`, you will also receive the events of the underlying build and deploy jobs. Defaults to <code>false</code>."
            ),
        ]
    ]


class GetQuery(TypedDict):
    """get query parameters."""


class ListQuery(TypedDict):
    """list query parameters."""

    # TODO use limit
    limit: NotRequired[
        Annotated[
            Optional[
                Union[
                    Annotated[float, Field(strict=True, ge=0)],
                    Annotated[int, Field(strict=True, ge=0)],
                ]
            ],
            Field(
                description="The maximum number of items to be return from this query. Has a deployment-defined default and maximum value."
            ),
        ]
    ]
    # TODO use type
    type: NotRequired[
        Annotated[
            Optional[List[JobTypeSchema]], Field(description="Filter on job type")
        ]
    ]
    # TODO use state
    state: NotRequired[
        Annotated[
            Optional[List[JobStateResult]], Field(description="Filter on job state")
        ]
    ]
    # TODO use functionType
    function_type: NotRequired[
        Annotated[
            Optional[List[FunctionType]], Field(description="Filter on function type")
        ]
    ]
    # TODO use createdBefore
    created_before: NotRequired[
        Annotated[
            Optional[Any],
            Field(
                description="Filter on jobs that created before the given timestamp or age"
            ),
        ]
    ]
    # TODO use createdAfter
    created_after: NotRequired[
        Annotated[
            Optional[Any],
            Field(
                description="Filter on jobs that created after the given timestamp or age"
            ),
        ]
    ]
