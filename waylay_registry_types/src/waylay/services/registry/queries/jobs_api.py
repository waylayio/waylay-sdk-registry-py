# coding: utf-8
"""Waylay Function Registry query parameters.

This code was generated from the OpenAPI documentation of 'Waylay Function Registry'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations  # for Python 3.7â€“3.9
import io
import warnings

from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Dict, List, Optional, Tuple, Union, Any
from typing_extensions import NotRequired, TypedDict

from pydantic import Field
from typing_extensions import Annotated
from pydantic import StrictBool, StrictStr

from typing import Any, List, Optional, Union

from ..models.event_with_close_sse import EventWithCloseSSE
from ..models.function_type import FunctionType
from ..models.job_response import JobResponse
from ..models.job_state_result import JobStateResult
from ..models.job_type import JobType
from ..models.job_type_schema import JobTypeSchema
from ..models.jobs_response import JobsResponse


class EventsQuery(TypedDict):
    """events query parameters."""

    type: NotRequired[Annotated[Optional[JobType], Field(description="The type of the job.")]]
    id: NotRequired[Annotated[Optional[StrictStr], Field(description="The id of the job.")]]
    children: NotRequired[Annotated[Optional[StrictBool], Field(description="If set to <code>true</code>, the event stream will include events of the job's dependants. E.g., when subscribing to a verify job with `children=true`, you will also receive the events of the underlying build and deploy jobs. Defaults to <code>false</code>.")]]


class GetQuery(TypedDict):
    """get query parameters."""


class ListQuery(TypedDict):
    """list query parameters."""

    limit: NotRequired[Annotated[Optional[Union[Annotated[float, Field(strict=True, ge=0)], Annotated[int, Field(strict=True, ge=0)]]], Field(description="The maximum number of items to be return from this query. Has a deployment-defined default and maximum value.")]]
    type: NotRequired[Annotated[Optional[List[JobTypeSchema]], Field(description="Filter on job type")]]
    state: NotRequired[Annotated[Optional[List[JobStateResult]], Field(description="Filter on job state")]]
    function_type: NotRequired[Annotated[Optional[List[FunctionType]], Field(description="Filter on function type")]]
    created_before: NotRequired[Annotated[Optional[Any], Field(description="Filter on jobs that created before the given timestamp or age")]]
    created_after: NotRequired[Annotated[Optional[Any], Field(description="Filter on jobs that created after the given timestamp or age")]]
